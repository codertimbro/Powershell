
Get-EventLog - LogName “Windows PowerShell” -ComputerName “local computer”, “Server1”, “Server2” -EntryType Error
Stop-Process -Name “notepad”
get-process
Show-Command
Measure-Object
Invoke-WebRequest	
invoke-item
out-null = output display is not hidden
write-host = output display is shown
get-clipboard = copies the data from the clipboard cache like control+V
set-clipboard = sets the data to clipboard and deleted the old data like control+C
set-clipboard -value "" = sets the data and add to information to the data
get-verb= shows what verbs can used in functions
import-csv <path> = inport csv files data
export-csv <path> = Exports the data to a file 
Out-file -FilePath <path> = when export function does not work and exports output to a file
-Append = Keeps the old data and adds new data to it
"$(Get-Date -format F) Start logging" = timestamp at the beginning
"$(Get-Date -format F) End logging" = timestamp at the end
Read-Host ""= Input for parameters

  Full Path for files =  (Get-ChildItem D:\MLB\GamesLogs -Filter *.txt).FullName

  Swtich

 $hometeam =switch($hometeam1){
cin{"Reds"}
wsh{"Nationals"}
atl{"Braves"}
default{break}
nyy{"Yankees"}
hou{"Astros"}
}

Get-Content -Path $filePath

Get-CimClass -Namespace root/CIMV2 | 
    Where-Object CimClassName -like Win32* | 
    Select-Object CimClassName

Get-CimInstance -Class Win32_OperatingSystem | Get-Member -MemberType Property
Get-CimInstance -Class Win32_OperatingSystem -ComputerName 192.168.50.128

Get-CimInstance -ClassName Win32_OperatingSystem | Invoke-CimMethod -MethodName Shutdown
shutdown.exe -l
Stop-Computer

Restart-Computer -Force

Get-CimInstance -ClassName Win32_OperatingSystem |
  Select-Object -Property BuildNumber,BuildType,OSType,ServicePackMajorVersion,ServicePackMinorVersion

(Get-CimInstance -ClassName Win32_ComputerSystem -Property UserName).username who is logon to the machine
Get-CimInstance -ClassName Win32_LocalTime time
New-Item -Path 'C:\temp\New Folder' -ItemType Directory
New-Item -Path 'C:\temp\New Folder\file.txt' -ItemType File
Get-ChildItem -Path C:\Windows -Force show hidden items

HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall This is what is listed in add and remove programs
$UninstallPath = 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall'
Get-ChildItem -Path $UninstallPath |
    ForEach-Object -Process { $_.GetValue('DisplayName') } |
    Sort-Object

function move-data {
param(mandatory=$true, [string[]]$source, [string[]]$destination)
robocopy $source $destination /e /move /r:1 /w:1 /log:<LogFile> /mt:80   #Move data from source to destination all folders including empty folder and multiple threading. 
}

