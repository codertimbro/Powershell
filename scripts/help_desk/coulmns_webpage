<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Columns with Bootstrap</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .item {
            background-color: #f0f0f0;
            padding: 10px;
            text-align: center;
            border: 1px solid #ccc;
            cursor: pointer;
            margin-bottom: 5px;
            position: relative;
        }
        .item::before {
            content: "→ ";
            position: absolute;
            left: 10px;
            font-size: 1.2em;
            font-weight: bold;
        }
        .modal-content {
            padding: 20px;
        }
        textarea {
            width: 100%;
            height: 200px;
            font-size: 1em;
        }
        .flex-container {
            display: flex;
        }
        .column-items, .textarea-container {
            flex: 1;
            padding: 10px;
        }
        .textarea-container {
            border-left: 1px solid #ccc;
        }
    </style>
</head>
<body>

<div class="container">
    <div class="row">
        <div class="col" onclick="showColumnModal(event, 'Outlook', ['Outlook Item 1', 'Outlook Item 2', 'Outlook Item 3'])">
            <div class="item">Outlook</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Zoom', ['Zoom Item 1', 'Zoom Item 2', 'Zoom Item 3'])">
            <div class="item">Zoom</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Teams', ['Teams Item 1', 'Teams Item 2', 'Teams Item 3'])">
            <div class="item">Teams</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Slack', ['Slack Item 1', 'Slack Item 2', 'Slack Item 3'])">
            <div class="item">Slack</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Skype', ['Skype Item 1', 'Skype Item 2', 'Skype Item 3'])">
            <div class="item">Skype</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Webex', ['Webex Item 1', 'Webex Item 2', 'Webex Item 3'])">
            <div class="item">Webex</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Hangouts', ['Hangouts Item 1', 'Hangouts Item 2', 'Hangouts Item 3'])">
            <div class="item">Hangouts</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Messenger', ['Messenger Item 1', 'Messenger Item 2', 'Messenger Item 3'])">
            <div class="item">Messenger</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'WhatsApp', ['WhatsApp Item 1', 'WhatsApp Item 2', 'WhatsApp Item 3'])">
            <div class="item">WhatsApp</div>
        </div>
        <div class="col" onclick="showColumnModal(event, 'Telegram', ['Telegram Item 1', 'Telegram Item 2', 'Telegram Item 3'])">
            <div class="item">Telegram</div>
        </div>
    </div>
</div>

<!-- Combined Modal -->
<div class="modal fade" id="columnModal" tabindex="-1" role="dialog" aria-labelledby="columnModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="columnModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body flex-container">
                <div class="column-items" id="columnItems"></div>
                <div class="textarea-container">
                    <textarea id="itemList"></textarea>
                    <button class="btn btn-primary refresh-button mt-3" onclick="refreshPage()">Refresh</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedItems = [];

    function showColumnModal(event, columnName, items) {
        const modalTitle = document.getElementById('columnModalLabel');
        const columnItems = document.getElementById('columnItems');
        modalTitle.textContent = columnName;
        columnItems.innerHTML = ''; // Clear previous items

        items.forEach(item => {
            const itemDiv = document.createElement('div');
            itemDiv.className = 'item';
            itemDiv.textContent = item;
            itemDiv.onclick = () => addItemToTextarea(item);
            columnItems.appendChild(itemDiv);
        });

        $('#columnModal').modal('show');
    }

    function addItemToTextarea(item) {
        const itemWithArrow = `→ ${item}`;
        selectedItems.push(itemWithArrow);
        const textarea = document.getElementById('itemList');
        textarea.value = selectedItems.join('\n');
    }
    const formattedItems = itemList.join('\n');
    textarea.value = `Talk to the user.\nRemoted into\n${formattedItems}`;
    function refreshPage() {
        selectedItems = [];
        document.getElementById('itemList').value = '';
    }
</script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

</body>
</html>
  function selectColumn(event, columnName) {
        const column = event.currentTarget;
        const items = column.querySelectorAll('.item');
        itemList = []; // Clear previous items
        items.forEach(item => {
            const itemText = `${item.textContent.trim()} →`;
            itemList.push(itemText);
        });
        const formattedItems = itemList.join('\n');
        textarea.value = `Talk to the user.\nRemoted into\n${formattedItems}`;
